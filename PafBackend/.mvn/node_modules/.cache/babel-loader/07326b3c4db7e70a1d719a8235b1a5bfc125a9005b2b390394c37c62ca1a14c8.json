{"ast":null,"code":"var _jsxFileName = \"G:\\\\pafRelease_v2\\\\Frontend\\\\src\\\\Components\\\\Community\\\\FriendsSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserConnectionService from \"../../Services/UserConnectionService\";\nimport { useSnapshot } from \"valtio\";\nimport state from \"../../Utils/Store\";\nimport axios from \"axios\";\nimport { Button, List, Avatar, Card } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsSection = () => {\n  _s();\n  const snap = useSnapshot(state);\n  const [friends, setFriends] = useState([]);\n  const [friendsUserNameData, setFriendsUserNameData] = useState([]);\n  useEffect(() => {\n    var _snap$currentUser;\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    UserConnectionService.getUserConnections((_snap$currentUser = snap.currentUser) === null || _snap$currentUser === void 0 ? void 0 : _snap$currentUser.uid).then(async res => {\n      let friends = [];\n      for (var friendId of res.friendIds) {\n        const user = snap.users.find(user => user.id === friendId);\n        const users = await axios.get(\"http://localhost:8080/api/users\", config);\n        setFriendsUserNameData(users.data);\n        if (user) {\n          const u = users.data.find(friend => friend.id === user.userId);\n          if (u) {\n            friends.push({\n              ...u,\n              ...user\n            });\n          }\n        }\n      }\n      setFriends(friends);\n    }).catch(err => {});\n  }, []);\n  const unfriend = async friendId => {\n    try {\n      await UserConnectionService.deleteUserConnection(snap.currentUser.uid, friendId);\n      const updatedFriends = friends.filter(friend => friend.id !== friendId);\n      setFriends(updatedFriends);\n    } catch (error) {\n      console.error(\"Error unfriending:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      dataSource: friends,\n      renderItem: friend => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          background: \"#f5d0f3\",\n          color: \"white\"\n        },\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            danger: true,\n            onClick: () => unfriend(friend.id),\n            children: \"Unfriend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            style: {\n              color: \"white\",\n              fontSize: \"16px\"\n            },\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: friend.image,\n              size: 64\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"white\"\n              },\n              children: friend.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this),\n            description: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"white\"\n              },\n              children: friend.biography\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendsSection, \"3IYp8Waq3j8ceKKCN9aQZE++6TQ=\", false, function () {\n  return [useSnapshot];\n});\n_c = FriendsSection;\nexport default FriendsSection;\nvar _c;\n$RefreshReg$(_c, \"FriendsSection\");","map":{"version":3,"names":["React","useEffect","useState","UserConnectionService","useSnapshot","state","axios","Button","List","Avatar","Card","jsxDEV","_jsxDEV","FriendsSection","_s","snap","friends","setFriends","friendsUserNameData","setFriendsUserNameData","_snap$currentUser","accessToken","localStorage","getItem","config","headers","Authorization","getUserConnections","currentUser","uid","then","res","friendId","friendIds","user","users","find","id","get","data","u","friend","userId","push","catch","err","unfriend","deleteUserConnection","updatedFriends","filter","error","console","children","dataSource","renderItem","style","background","color","bordered","Item","actions","type","danger","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Meta","fontSize","avatar","src","image","size","title","username","description","biography","_c","$RefreshReg$"],"sources":["G:/pafRelease_v2/Frontend/src/Components/Community/FriendsSection.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UserConnectionService from \"../../Services/UserConnectionService\";\nimport { useSnapshot } from \"valtio\";\nimport state from \"../../Utils/Store\";\nimport axios from \"axios\";\nimport { Button, List, Avatar, Card } from \"antd\";\nconst FriendsSection = () => {\n  const snap = useSnapshot(state);\n  const [friends, setFriends] = useState([]);\n  const [friendsUserNameData, setFriendsUserNameData] = useState([]);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n    UserConnectionService.getUserConnections(snap.currentUser?.uid)\n      .then(async (res) => {\n        let friends = [];\n        for (var friendId of res.friendIds) {\n          const user = snap.users.find((user) => user.id === friendId);\n          const users = await axios.get(\n            \"http://localhost:8080/api/users\",\n            config\n          );\n\n          setFriendsUserNameData(users.data);\n          if (user) {\n            const u = users.data.find((friend) => friend.id === user.userId);\n\n            if (u) {\n              friends.push({ ...u, ...user });\n            }\n          }\n        }\n        setFriends(friends);\n      })\n      .catch((err) => {});\n  }, []);\n  const unfriend = async (friendId) => {\n    try {\n      await UserConnectionService.deleteUserConnection(\n        snap.currentUser.uid,\n        friendId\n      );\n\n      const updatedFriends = friends.filter((friend) => friend.id !== friendId);\n      setFriends(updatedFriends);\n    } catch (error) {\n      console.error(\"Error unfriending:\", error);\n    }\n  };\n  return (\n    <div>\n      <List\n        dataSource={friends}\n        renderItem={(friend) => (\n          <Card\n            style={{ background: \"#f5d0f3\", color: \"white\" }}\n            bordered={false}\n            key={friend.id}\n          >\n            <List.Item\n              actions={[\n                <Button\n                  type=\"primary\"\n                  danger\n                  onClick={() => unfriend(friend.id)}\n                >\n                  Unfriend\n                </Button>,\n              ]}\n            >\n              <List.Item.Meta\n                style={{ color: \"white\", fontSize: \"16px\" }}\n                avatar={<Avatar src={friend.image} size={64} />}\n                title={\n                  <span style={{ color: \"white\" }}>{friend.username}</span>\n                }\n                description={\n                  <span style={{ color: \"white\" }}>{friend.biography}</span>\n                }\n              />\n            </List.Item>\n          </Card>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default FriendsSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}